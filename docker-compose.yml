services:
  git-server:
    image: alpine/git
    container_name: git-server
    volumes:
      - config-repo:/git
    command: [
        "sh",
        "-c",
        "mkdir -p /git &&
            cd /git &&
            # Clean existing repo if corrupted
            rm -rf .git || true &&
            git init --initial-branch=master &&
            # Create configuration files
            echo 'server:\n  port: 9998' > application.yml &&
            echo 'spring:\n  data:\n    mongodb:\n      host: mongodb' > user-service.yml &&
            git add . &&
            git config --global user.email 'foughaliyouness@gmail.com' &&
            git config --global user.name 'unesFou' &&
            git commit -m 'Initial config' &&
            # Keep container alive
            tail -f /dev/null"
    ]
    networks:
      - app-network

  eureka:
    build: ./eureka
    container_name: eureka
    ports:
      - "8761:8761"
    networks:
      - app-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    healthcheck:
      test: [ "CMD-SHELL", "wget --spider -q http://localhost:8761/actuator/health || exit 0" ]
      interval: 20s
      retries: 10
      start_period: 120s

  config-server:
    build: ./config-server
    container_name: config-server
    ports:
      - "9998:9998"
    networks:
      - app-network
    depends_on:
      eureka:
        condition: service_healthy
      git-server:
        condition: service_started
    environment:
      #- SPRING_CLOUD_CONFIG_SERVER_GIT_URI=file:///.git/
      - SPRING_CLOUD_CONFIG_SERVER_GIT_URI=https://github.com/unesFou/config-repo.git
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka:8761/eureka/
    volumes :
      - config-repo:/git
    healthcheck:
      test: [ "CMD-SHELL", "wget --spider -q http://localhost:9998/actuator/health || exit 0" ]
      interval: 15s
      start_period: 60s
      retries: 5

  getway:
    build: ./getway
    container_name: getway
    ports:
      - "9999:9999"
    networks:
      - app-network
    depends_on:
      eureka:
        condition: service_healthy
      config-server:
        condition: service_healthy
    environment:
      - SPRING_CLOUD_CONFIG_URI=http://config-server:9998
      #- EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka:8761/eureka/

  user-security:
    build: ./userSecurity
    container_name: userSecurity-service
    ports:
      - "8068:8068"
    networks:
      - app-network
    depends_on:
      eureka:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      config-server:
        condition: service_healthy
    environment:
      - SPRING_CLOUD_CONFIG_URI=http://config-server:9998
      #- JWT_SECRET= my-secret-key

  vehicle-service:
    build: ./vehicle
    container_name: vehicle-service
    ports:
      - "8091:8091"
    networks:
      - app-network
    depends_on:
      eureka:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      config-server:
        condition: service_healthy
    environment:
      - SPRING_CLOUD_CONFIG_URI=http://config-server:9998

  appartement-service:
    build: ./appartement
    container_name: appartement-service
    ports:
      - "8088:8088"
    networks:
      - app-network
    depends_on:
      eureka:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      config-server:
        condition: service_healthy
    environment:
      - SPRING_CLOUD_CONFIG_URI=http://config-server:9998

  reservation-service:
    build: ./reservation
    container_name: reservation-service
    ports:
      - "8084:8084"
    networks:
      - app-network
    depends_on:
      eureka:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      config-server:
        condition: service_healthy
    environment:
      - SPRING_CLOUD_CONFIG_URI=http://config-server:9998

  mongodb:
    image: mongo:6
    container_name: mongodb
    user : root
    ports:
      - "27017:27017"
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 10s
      retries: 3
      start_period: 20s

#  keycloak:
#    image: quay.io/keycloak/keycloak:24.0.1
#    container_name: keycloak
#    command: start-dev
#    ports:
#      - "8080:8080"
#    environment:
#      KEYCLOAK_ADMIN: admin
#      KEYCLOAK_ADMIN_PASSWORD: admin
#    networks:
#      - app-network

#  n8n:
#    image: n8nio/n8n
#    container_name: n8n
#    restart: always
#    ports:
#      - "5678:5678"
#    environment:
#      - DB_TYPE=sqlite
#      - N8N_BASIC_AUTH_ACTIVE=true
#      - N8N_BASIC_AUTH_USER=admin
#      - N8N_BASIC_AUTH_PASSWORD=admin
#      - N8N_HOST=n8n.local
#      - WEBHOOK_URL=http://localhost:5678
#    volumes:
#      - n8n_data:/home/node/.n8n
#    networks:
#      - app-network
#    depends_on:
#      - mongodb



networks:
  app-network:
    driver: bridge
volumes:
  config-repo:
  n8n_data: